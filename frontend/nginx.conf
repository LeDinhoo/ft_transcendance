## VERSION QUI WORKS
#upstream hello_django {
#    server backend:8000;  # Adresse du backend (ex: Django)
#}
#
#server {
#    listen 443 ssl;
#    listen [::]:443 ssl;
#
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_certificate /etc/nginx/certs/localhost.crt;
#    ssl_certificate_key /etc/nginx/certs/localhost.key;
#
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers 'HIGH:!aNULL:!MD5';
#
#    # Serve les fichiers HTML dans le dossier templates
#    location / {
#        root /usr/share/nginx/html;  # Chemin général vers les fichiers HTML
#        index templates/index.html;
#        try_files $uri $uri/ /templates/index.html;
#        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
#        expires -1;
#    }
#
#    # Proxy pass pour l'API backend
#    location /api/ {
#        proxy_pass http://hello_django;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_read_timeout 300s;
#    }
#
#    # Serve les fichiers statiques (CSS, JS, images)
#    location /static/ {
#        alias /usr/share/nginx/html/static/;
#        expires 30d;
#    }
#
#    # Serve les fichiers média (si nécessaires)
#    location /media/ {
#        alias /usr/share/nginx/html/media/;
#    }
#
#    location = /favicon.ico {
#        alias /usr/share/nginx/html/static/assets/favicon.ico;
#        access_log off;
#        log_not_found off;
#    }
#
#    error_page 404 /404.html;
#    location = /404.html {
#        root /usr/share/nginx/html;
#        internal;
#    }
#
#    error_page 500 502 503 504 /50x.html;
#    location = /50x.html {
#        root /usr/share/nginx/html;
#        internal;
#    }
#}

## VERSION AVEC HTTPS VERS LE BACKEND / redirection vers game fonctionnel mais pas optimal
#upstream hello_django {
#    server backend:8443;  # Adresse du backend (ex: Django) - ici le backend doit accepter HTTPS sur ce port
#}
#
#server {
#    listen 443 ssl;
#    listen [::]:443 ssl;
#
#    ssl_protocols TLSv1.2 TLSv1.3;
#    #ssl_certificate /etc/nginx/certs/localhost.crt;
#    ssl_certificate /etc/nginx/certs/gunicorn.crt;
#    #ssl_certificate_key /etc/nginx/certs/localhost.key;
#    ssl_certificate_key /etc/nginx/certs/gunicorn.key;
#
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers 'HIGH:!aNULL:!MD5';
#
#    # Serve les fichiers HTML dans le dossier templates
#    location / {
#        root /usr/share/nginx/html;  # Chemin général vers les fichiers HTML
#        #alias /usr/share/nginx/html/static/;
#        index templates/index.html;
#        try_files $uri $uri/ /templates/index.html;
#        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
#        expires -1;
#    }
#
#    # Serve le fichier game.html directement pour /game/
#    location /game/ {
#        root /usr/share/nginx/html;
#        try_files /templates/game.html =404;
#    }
#
#
#    # Proxy pass pour l'API backend via HTTPS
#    location /api/ {
#        #proxy_pass https://hello_django;  # Utilisation de HTTPS pour la communication avec le backend
#        proxy_pass https://backend:8443;  # Utilisation de HTTPS pour la communication avec le backend
#
#        # Désactive la vérification SSL si le backend utilise un certificat auto-signé
#        proxy_ssl_verify off;
#
#        # Optionnel : si le backend utilise un certificat valide, tu peux spécifier le chemin vers le certificat racine
#        # proxy_ssl_trusted_certificate /etc/nginx/certs/localhost.crt;
#
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_read_timeout 300s;
#    }
#
#    # Serve les fichiers statiques (CSS, JS, images)
#    location /static/ {
#        alias /usr/share/nginx/html/static/;
#        expires 30d;
#    }
#
#    # Serve les fichiers média (si nécessaires)
#    location /media/ {
#        alias /usr/share/nginx/html/media/;
#    }
#
#    location = /favicon.ico {
#        alias /usr/share/nginx/html/static/assets/favicon.ico;
#        access_log off;
#        log_not_found off;
#    }
#
#    error_page 404 /404.html;
#    location = /404.html {
#        root /usr/share/nginx/html;
#        internal;
#    }
#
#    error_page 500 502 503 504 /50x.html;
#    location = /50x.html {
#        root /usr/share/nginx/html;
#        internal;
#    }
#}

# Configuration Nginx avec HTTPS vers le backend

# upstream backend service
upstream backend_django {
    server backend:8443;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_certificate /etc/nginx/certs/gunicorn.crt;
    ssl_certificate_key /etc/nginx/certs/gunicorn.key;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'HIGH:!aNULL:!MD5';

    # Redirection des requêtes principales vers le frontend (HTML)
    location / {
        root /usr/share/nginx/html;
        index templates/index.html;
        try_files $uri $uri/ /templates/index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        expires -1;
    }

    

    # Redirection vers le fichier game.html pour le chemin /game/
    location /game/ {
        alias /usr/share/nginx/html/templates/;
        try_files /game.html =404;
    }

    # Proxy pass pour toutes les requêtes API, y compris /api/get-auth-url/
location /api/ {
    proxy_pass https://backend:8443;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}


    # Proxy pass pour /home/
    location /home/ {
        proxy_pass https://backend_django;
        proxy_ssl_verify off;  # Désactive la vérification SSL si vous utilisez des certificats auto-signés
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300s;
    }

    # Servir les fichiers statiques (CSS, JS, images) à partir du frontend
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Servir les fichiers média (si nécessaires)
    location /media/ {
        alias /usr/share/nginx/html/media/;
    }

    # Favicon
    location = /favicon.ico {
        alias /usr/share/nginx/html/static/assets/favicon.ico;
        access_log off;
        log_not_found off;
    }

    # Pages d'erreur personnalisées
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}